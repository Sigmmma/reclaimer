from reclaimer.common_descs import *
from supyr_struct.defs.tag_def import TagDef

matg_language = (
    "english",
    "japanese",
    "german",
    "french",
    "spanish",
    "latin_american_spanish",
    "italian",
    "korean",
    "chinese_traditional",
    "chinese_simplified",
    "portuguese",
    "polish",
    )


matg_havok_cleanup_resource = Struct("havok_cleanup_resources",
    dependency("object_cleanup_effect"),
    ENDIAN=">", SIZE=16
    )


matg_sound_global = Struct("sound_globals",
    dependency("sound_classes"),
    dependency("sound_effects"),
    dependency("sound_mix"),
    dependency("sound_combat_dialogue_constants"),
    dependency("sound_global_propagation"),
    ENDIAN=">", SIZE=80
    )


matg_ai_global_gravemind_propertie = Struct("gravemind_properties",
    Float("minimum_retreat_time"),
    Float("ideal_retreat_time"),
    Float("maximum_retreat_time"),
    ENDIAN=">", SIZE=12
    )


matg_ai_global_style = Struct("styles",
    dependency("style"),
    ENDIAN=">", SIZE=16
    )


matg_ai_global = Struct("ai_globals",
    Pad(12),
    Float("danger_broadly_facing"),
    Pad(4),
    Float("danger_shooting_near"),
    Pad(4),
    Float("danger_shooting_at"),
    Pad(4),
    Float("danger_extremely_close"),
    Pad(4),
    Float("danger_shield_damage"),
    Float("danger_extended_shield_damage"),
    Float("danger_body_damage"),
    Float("danger_extended_body_damage"),
    Pad(48),
    dependency("global_dialogue"),
    string_id_meta("default_mission_dialogue_sound_effect"),
    Pad(20),
    Float("jump_down"),
    Float("jump_step"),
    Float("jump_crouch"),
    Float("jump_stand"),
    Float("jump_storey"),
    Float("jump_tower"),
    Float("max_jump_down_height_down"),
    Float("max_jump_down_height_step"),
    Float("max_jump_down_height_crouch"),
    Float("max_jump_down_height_stand"),
    Float("max_jump_down_height_storey"),
    Float("max_jump_down_height_tower"),
    Float("hoist_step_min"),
    Float("hoist_step_max"),
    Float("hoist_crouch_min"),
    Float("hoist_crouch_max"),
    Float("hoist_stand_min"),
    Float("hoist_stand_max"),
    Pad(24),
    Float("vault_step_min"),
    Float("vault_step_max"),
    Float("vault_crouch_min"),
    Float("vault_crouch_max"),
    Pad(48),
    reflexive("gravemind_properties", matg_ai_global_gravemind_propertie),
    Pad(48),
    Float("scary_target_threshold"),
    Float("scary_weapon_threshold"),
    Pad(44),
    reflexive("styles", matg_ai_global_style),
    ENDIAN=">", SIZE=432
    )


matg_damage_table_damage_group_armor_modifier = Struct("armor_modifiers",
    string_id_meta("name"),
    Float("damage_multiplier"),
    ENDIAN=">", SIZE=8
    )


matg_damage_table_damage_group = Struct("damage_groups",
    string_id_meta("name"),
    reflexive("armor_modifiers", matg_damage_table_damage_group_armor_modifier),
    ENDIAN=">", SIZE=16
    )


matg_damage_table = Struct("damage_table",
    reflexive("damage_groups", matg_damage_table_damage_group),
    ENDIAN=">", SIZE=12
    )


matg_sound = Struct("sounds",
    dependency("sound_obsolete"),
    ENDIAN=">", SIZE=16
    )


matg_camera = Struct("camera",
    dependency("default_unit_camera_track"),
    Float("unknown"),
    Float("unknown_1"),
    Float("unknown_2"),
    Float("unknown_3"),
    Float("unknown_4"),
    Float("unknown_5"),
    Float("unknown_6"),
    Float("unknown_7"),
    Float("unknown_8"),
    Float("unknown_9"),
    Float("unknown_10"),
    Float("unknown_11"),
    Float("unknown_12"),
    Float("unknown_13"),
    Float("unknown_14"),
    Float("unknown_15"),
    Float("unknown_16"),
    Float("unknown_17"),
    Float("unknown_18"),
    Float("unknown_19"),
    Float("unknown_20"),
    Float("unknown_21"),
    Float("unknown_22"),
    Float("unknown_23"),
    SInt16("unknown_24"),
    SInt16("unknown_25"),
    Float("unknown_26"),
    Float("unknown_27"),
    Float("unknown_28"),
    Float("unknown_29"),
    Float("unknown_30"),
    Float("unknown_31"),
    Float("unknown_32"),
    Float("unknown_33"),
    Float("unknown_34"),
    Float("unknown_35"),
    Float("unknown_36"),
    ENDIAN=">", SIZE=160
    )


matg_player_control_look_function = Struct("look_function",
    Float("scale"),
    ENDIAN=">", SIZE=4
    )


matg_player_control = Struct("player_control",
    Float("magnetism_friction"),
    Float("magnetism_adhesion"),
    Float("inconsequential_target_scale"),
    Pad(12),
    Float("crosshair_location_x"),
    Float("crosshair_location_y"),
    Float("seconds_to_start"),
    Float("seconds_to_full_speed"),
    Float("decay_rate"),
    Float("full_speed_multiplier"),
    Float("pegged_magnitude"),
    Float("pegged_angular_threshold"),
    Pad(8),
    Float("look_default_pitch_rate"),
    Float("look_default_yaw_rate"),
    Float("look_peg_threshold"),
    Float("look_yaw_acceleration_time"),
    Float("look_yaw_acceleration_scale"),
    Float("look_pitch_acceleration_time"),
    Float("look_pitch_acceleration_scale"),
    Float("look_autoleveling_scale"),
    Pad(8),
    Float("gravity_scale"),
    SInt32("minimum_autoleveling_ticks"),
    float_rad("minimum_angle_for_vehicle_flipping"),
    reflexive("look_function", matg_player_control_look_function),
    Float("minimum_action_hold_time"),
    Pad(4),
    ENDIAN=">", SIZE=136
    )


matg_difficulty = Struct("difficulty",
    Float("easy_enemy_damage"),
    Float("normal_enemy_damage"),
    Float("hard_enemy_damage"),
    Float("impossible_enemy_damage"),
    Float("easy_enemy_vitality"),
    Float("normal_enemy_vitality"),
    Float("hard_enemy_vitality"),
    Float("impossible_enemy_vitality"),
    Float("easy_enemy_shield"),
    Float("normal_enemy_shield"),
    Float("hard_enemy_shield"),
    Float("impossible_enemy_shield"),
    Float("easy_enemy_recharge"),
    Float("normal_enemy_recharge"),
    Float("hard_enemy_recharge"),
    Float("impossible_enemy_recharge"),
    Float("easy_friend_damage"),
    Float("normal_friend_damage"),
    Float("hard_friend_damage"),
    Float("impossible_friend_damage"),
    Float("easy_friend_vitality"),
    Float("normal_friend_vitality"),
    Float("hard_friend_vitality"),
    Float("impossible_friend_vitality"),
    Float("easy_friend_shield"),
    Float("normal_friend_shield"),
    Float("hard_friend_shield"),
    Float("impossible_friend_shield"),
    Float("easy_friend_recharge"),
    Float("normal_friend_recharge"),
    Float("hard_friend_recharge"),
    Float("impossible_friend_recharge"),
    Float("easy_infection_forms"),
    Float("normal_infection_forms"),
    Float("hard_infection_forms"),
    Float("impossible_infection_forms"),
    Float("easy_unknown"),
    Float("normal_unknown"),
    Float("hard_unknown"),
    Float("impossible_unknown"),
    Float("easy_rate_of_fire"),
    Float("normal_rate_of_fire"),
    Float("hard_rate_of_fire"),
    Float("impossible_rate_of_fire"),
    Float("easy_projectile_error"),
    Float("normal_projectile_error"),
    Float("hard_projectile_error"),
    Float("impossible_projectile_error"),
    Float("easy_burst_error"),
    Float("normal_burst_error"),
    Float("hard_burst_error"),
    Float("impossible_burst_error"),
    Float("easy_target_delay"),
    Float("normal_target_delay"),
    Float("hard_target_delay"),
    Float("impossible_target_delay"),
    Float("easy_burst_separation"),
    Float("normal_burst_separation"),
    Float("hard_burst_separation"),
    Float("impossible_burst_separation"),
    Float("easy_target_tracking"),
    Float("normal_target_tracking"),
    Float("hard_target_tracking"),
    Float("impossible_target_tracking"),
    Float("easy_target_leading"),
    Float("normal_target_leading"),
    Float("hard_target_leading"),
    Float("impossible_target_leading"),
    Float("easy_overcharge_chance"),
    Float("normal_overcharge_chance"),
    Float("hard_overcharge_chance"),
    Float("impossible_overcharge_chance"),
    Float("easy_special_fire_delay"),
    Float("normal_special_fire_delay"),
    Float("hard_special_fire_delay"),
    Float("impossible_special_fire_delay"),
    Float("easy_guidance_vs_player"),
    Float("normal_guidance_vs_player"),
    Float("hard_guidance_vs_player"),
    Float("impossible_guidance_vs_player"),
    Float("easy_melee_delay_base"),
    Float("normal_melee_delay_base"),
    Float("hard_melee_delay_base"),
    Float("impossible_melee_delay_base"),
    Float("easy_melee_delay_scale"),
    Float("normal_melee_delay_scale"),
    Float("hard_melee_delay_scale"),
    Float("impossible_melee_delay_scale"),
    Float("easy_unknown_1"),
    Float("normal_unknown_1"),
    Float("hard_unknown_1"),
    Float("impossible_unknown_1"),
    Float("easy_grenade_chance_scale"),
    Float("normal_grenade_chance_scale"),
    Float("hard_grenade_chance_scale"),
    Float("impossible_grenade_chance_scale"),
    Float("easy_grenade_timer_scale"),
    Float("normal_grenade_timer_scale"),
    Float("hard_grenade_timer_scale"),
    Float("impossible_grenade_timer_scale"),
    Float("easy_unknown_2"),
    Float("normal_unknown_2"),
    Float("hard_unknown_2"),
    Float("impossible_unknown_2"),
    Float("easy_unknown_3"),
    Float("normal_unknown_3"),
    Float("hard_unknown_3"),
    Float("impossible_unknown_3"),
    Float("easy_unknown_4"),
    Float("normal_unknown_4"),
    Float("hard_unknown_4"),
    Float("impossible_unknown_4"),
    Float("easy_major_upgrade_normal"),
    Float("normal_major_upgrade_normal"),
    Float("hard_major_upgrade_normal"),
    Float("impossible_major_upgrade_normal"),
    Float("easy_major_upgrade_few"),
    Float("normal_major_upgrade_few"),
    Float("hard_major_upgrade_few"),
    Float("impossible_major_upgrade_few"),
    Float("easy_major_upgrade_many"),
    Float("normal_major_upgrade_many"),
    Float("hard_major_upgrade_many"),
    Float("impossible_major_upgrade_many"),
    Float("easy_player_vehicle_ram_chance"),
    Float("normal_player_vehicle_ram_chance"),
    Float("hard_player_vehicle_ram_chance"),
    Float("impossible_player_vehicle_ram_chance"),
    Pad(132),
    ENDIAN=">", SIZE=644
    )


matg_grenade = Struct("grenades",
    SInt16("maximum_count"),
    SInt16("unknown"),
    dependency("throwing_effect"),
    Pad(16),
    dependency("equipment"),
    dependency("projectile"),
    ENDIAN=">", SIZE=68
    )


matg_interface_tag = Struct("interface_tags",
    dependency("spinner"),
    dependency("obsolete"),
    dependency("screen_color_table"),
    dependency("hud_color_table"),
    dependency("editor_color_table"),
    dependency("dialog_color_table"),
    dependency("motion_sensor_sweep_bitmap"),
    dependency("motion_sensor_sweep_bitmap_mask"),
    dependency("multiplayer_hud_bitmap"),
    dependency("hud_digits_definition"),
    dependency("motion_sensor_blip_bitmap"),
    dependency("interface_goo_map_1"),
    dependency("interface_goo_map_2"),
    dependency("interface_goo_map_3"),
    dependency("main_menu_ui_globals"),
    dependency("single_player_ui_globals"),
    dependency("multiplayer_ui_globals"),
    dependency("hud_globals"),
    ENDIAN=">", SIZE=288
    )


matg_player_information = Struct("player_information",
    Float("walking_speed"),
    Float("run_forward"),
    Float("run_backward"),
    Float("run_sideways"),
    Float("run_acceleration"),
    Float("sneak_forward"),
    Float("sneak_backward"),
    Float("sneak_sideways"),
    Float("sneak_acceleration"),
    Float("airborne_acceleration"),
    Float("grenade_origin_x"),
    Float("grenade_origin_y"),
    Float("grenade_origin_z"),
    Float("stun_movement_penalty"),
    Float("stun_turning_penalty"),
    Float("stun_jumping_penalty"),
    Float("minimum_stun_time"),
    Float("maximum_stun_time"),
    Float("first_person_idle_time_min"),
    Float("first_person_idle_time_max"),
    Float("first_person_skip_fraction"),
    dependency("unknown"),
    dependency("unknown_1"),
    dependency("coop_respawn_effect"),
    SInt32("binoculars_zoom_count"),
    Float("binocular_zoom_range_min"),
    Float("binocular_zoom_range_max"),
    dependency("flashlight_on"),
    dependency("flashlight_off"),
    dependency("default_damage_response"),
    ENDIAN=">", SIZE=192
    )


matg_player_representation = Struct("player_representation",
    dependency("first_person_hands"),
    dependency("first_person_body"),
    dependency("third_person_unit"),
    string_id_meta("third_person_variant"),
    dependency("binoculars_zoom_in_sound"),
    dependency("binoculars_zoom_out_sound"),
    ENDIAN=">", SIZE=84
    )


matg_falling_damage = Struct("falling_damage",
    Float("harmful_falling_distance_min"),
    Float("harmful_falling_distance_max"),
    dependency("falling_damage"),
    dependency("unknown"),
    dependency("soft_landing"),
    dependency("hard_landing"),
    dependency("script_damage"),
    Float("maximum_falling_distance"),
    dependency("distance_damage"),
    Float("unknown_1"),
    Float("unknown_2"),
    Float("unknown_3"),
    ENDIAN=">", SIZE=120
    )


matg_material_water_drag_propertie = Struct("water_drag_properties",
    Float("unknown"),
    Float("unknown_1"),
    Float("unknown_2"),
    Float("unknown_3"),
    Float("unknown_4"),
    Float("unknown_5"),
    Float("unknown_6"),
    Float("unknown_7"),
    Float("unknown_8"),
    Pad(4),
    ENDIAN=">", SIZE=40
    )


matg_material_water_interaction = Struct("water_interaction",
    string_id_meta("surface_name"),
    string_id_meta("submerged_name"),
    SInt16("surface_index"),
    SInt16("submerged_index"),
    ENDIAN=">", SIZE=12
    )


matg_material = Struct("materials",
    string_id_meta("name"),
    string_id_meta("parent_name"),
    SInt16("parent_index"),
    Bool16("flags",
        ),
    string_id_meta("general_armor"),
    string_id_meta("specific_armor"),
    Pad(4),
    Float("friction"),
    Float("restitution"),
    Float("density"),
    reflexive("water_drag_properties", matg_material_water_drag_propertie),
    dependency("breakable_surface"),
    dependency("sound_sweetener_small"),
    dependency("sound_sweetener_medium"),
    dependency("sound_sweetener_large"),
    dependency("sound_sweetener_rolling"),
    dependency("sound_sweetener_grinding"),
    dependency("sound_sweetener_melee_small"),
    dependency("sound_sweetener_melee_medium"),
    dependency("sound_sweetener_melee_large"),
    dependency("effect_sweetener_small"),
    dependency("effect_sweetener_medium"),
    dependency("effect_sweetener_large"),
    dependency("effect_sweetener_rolling"),
    dependency("effect_sweetener_grinding"),
    dependency("effect_sweetener_melee"),
    dependency("water_ripple_small"),
    dependency("water_ripple_medium"),
    dependency("water_ripple_large"),
    Bool32("sweetener_inheritance_flags",
        "sound_small",
        "sound_medium",
        "sound_large",
        "sound_rolling",
        "sound_grinding",
        "sound_melee_small",
        "sound_melee_medium",
        "sound_melee_large",
        "effect_small",
        "effect_medium",
        "effect_large",
        "effect_rolling",
        "effect_grinding",
        "effect_melee",
        "water_ripple_small",
        "water_ripple_medium",
        "water_ripple_large",
        ),
    dependency("material_effects"),
    reflexive("water_interaction", matg_material_water_interaction),
    ENDIAN=">", SIZE=368
    )


matg_player_color = Struct("player_colors",
    color_rgb_float("color"),
    ENDIAN=">", SIZE=12
    )


matg_cinematic_anchor = Struct("cinematic_anchors",
    dependency("cinematic_anchor"),
    Pad(4),
    ENDIAN=">", SIZE=20
    )


matg_metagame_global_medal = Struct("medals",
    Float("multiplier"),
    ENDIAN=">", SIZE=4
    )


matg_metagame_global_difficulty = Struct("difficulty",
    Float("multiplier"),
    ENDIAN=">", SIZE=4
    )


matg_metagame_global_primary_skull = Struct("primary_skulls",
    Float("multiplier"),
    ENDIAN=">", SIZE=4
    )


matg_metagame_global_secondary_skull = Struct("secondary_skulls",
    Float("multiplier"),
    ENDIAN=">", SIZE=4
    )


matg_metagame_global = Struct("metagame_globals",
    reflexive("medals", matg_metagame_global_medal),
    reflexive("difficulty", matg_metagame_global_difficulty),
    reflexive("primary_skulls", matg_metagame_global_primary_skull),
    reflexive("secondary_skulls", matg_metagame_global_secondary_skull),
    SInt32("unknown"),
    SInt32("death_penalty"),
    SInt32("betrayal_penalty"),
    SInt32("unknown_1"),
    Float("multikill_window"),
    Float("emp_window"),
    ENDIAN=">", SIZE=72
    )


matg_meta_def = BlockDef("matg",
    Pad(172),
    SEnum32("language", *matg_language),
    reflexive("havok_cleanup_resources", matg_havok_cleanup_resource),
    reflexive("sound_globals", matg_sound_global),
    reflexive("ai_globals", matg_ai_global),
    reflexive("damage_table", matg_damage_table),
    Pad(12),
    reflexive("sounds", matg_sound),
    reflexive("camera", matg_camera),
    reflexive("player_control", matg_player_control),
    reflexive("difficulty", matg_difficulty),
    reflexive("grenades", matg_grenade),
    Pad(12),
    reflexive("interface_tags", matg_interface_tag),
    Pad(24),
    reflexive("player_information", matg_player_information),
    reflexive("player_representation", matg_player_representation),
    reflexive("falling_damage", matg_falling_damage),
    reflexive("materials", matg_material),
    reflexive("player_colors", matg_player_color),
    dependency("multiplayer_globals"),
    reflexive("cinematic_anchors", matg_cinematic_anchor),
    reflexive("metagame_globals", matg_metagame_global),
    UInt32("unknown_4"),
    UInt32("unknown_5"),
    UInt32("string_count"),
    UInt32("locale_table_size"),
    UInt32("locale_index_table_offset"),
    UInt32("locale_data_index_offset"),
    BytesRaw("index_table_hash", SIZE=20),
    BytesRaw("string_data_hash", SIZE=20),
    UInt32("unknown_6"),
    UInt32("unknown_7"),
    UInt32("unknown_8"),
    UInt32("string_count_1"),
    UInt32("locale_table_size_1"),
    UInt32("locale_index_table_offset_1"),
    UInt32("locale_data_index_offset_1"),
    BytesRaw("index_table_hash_1", SIZE=20),
    BytesRaw("string_data_hash_1", SIZE=20),
    UInt32("unknown_9"),
    UInt32("unknown_10"),
    UInt32("unknown_11"),
    UInt32("string_count_2"),
    UInt32("locale_table_size_2"),
    UInt32("locale_index_table_offset_2"),
    UInt32("locale_data_index_offset_2"),
    BytesRaw("index_table_hash_2", SIZE=20),
    BytesRaw("string_data_hash_2", SIZE=20),
    UInt32("unknown_12"),
    UInt32("unknown_13"),
    UInt32("unknown_14"),
    UInt32("string_count_3"),
    UInt32("locale_table_size_3"),
    UInt32("locale_index_table_offset_3"),
    UInt32("locale_data_index_offset_3"),
    BytesRaw("index_table_hash_3", SIZE=20),
    BytesRaw("string_data_hash_3", SIZE=20),
    UInt32("unknown_15"),
    UInt32("unknown_16"),
    UInt32("unknown_17"),
    UInt32("string_count_4"),
    UInt32("locale_table_size_4"),
    UInt32("locale_index_table_offset_4"),
    UInt32("locale_data_index_offset_4"),
    BytesRaw("index_table_hash_4", SIZE=20),
    BytesRaw("string_data_hash_4", SIZE=20),
    UInt32("unknown_18"),
    UInt32("unknown_19"),
    UInt32("unknown_20"),
    UInt32("string_count_5"),
    UInt32("locale_table_size_5"),
    UInt32("locale_index_table_offset_5"),
    UInt32("locale_data_index_offset_5"),
    BytesRaw("index_table_hash_5", SIZE=20),
    BytesRaw("string_data_hash_5", SIZE=20),
    UInt32("unknown_21"),
    UInt32("unknown_22"),
    UInt32("unknown_23"),
    UInt32("string_count_6"),
    UInt32("locale_table_size_6"),
    UInt32("locale_index_table_offset_6"),
    UInt32("locale_data_index_offset_6"),
    BytesRaw("index_table_hash_6", SIZE=20),
    BytesRaw("string_data_hash_6", SIZE=20),
    UInt32("unknown_24"),
    UInt32("unknown_25"),
    UInt32("unknown_26"),
    UInt32("string_count_7"),
    UInt32("locale_table_size_7"),
    UInt32("locale_index_table_offset_7"),
    UInt32("locale_data_index_offset_7"),
    BytesRaw("index_table_hash_7", SIZE=20),
    BytesRaw("string_data_hash_7", SIZE=20),
    UInt32("unknown_27"),
    UInt32("unknown_28"),
    UInt32("unknown_29"),
    UInt32("string_count_8"),
    UInt32("locale_table_size_8"),
    UInt32("locale_index_table_offset_8"),
    UInt32("locale_data_index_offset_8"),
    BytesRaw("index_table_hash_8", SIZE=20),
    BytesRaw("string_data_hash_8", SIZE=20),
    UInt32("unknown_30"),
    UInt32("unknown_31"),
    UInt32("unknown_32"),
    UInt32("string_count_9"),
    UInt32("locale_table_size_9"),
    UInt32("locale_index_table_offset_9"),
    UInt32("locale_data_index_offset_9"),
    BytesRaw("index_table_hash_9", SIZE=20),
    BytesRaw("string_data_hash_9", SIZE=20),
    UInt32("unknown_33"),
    UInt32("unknown_34"),
    UInt32("unknown_35"),
    UInt32("string_count_10"),
    UInt32("locale_table_size_10"),
    UInt32("locale_index_table_offset_10"),
    UInt32("locale_data_index_offset_10"),
    BytesRaw("index_table_hash_10", SIZE=20),
    BytesRaw("string_data_hash_10", SIZE=20),
    UInt32("unknown_36"),
    UInt32("unknown_37"),
    UInt32("unknown_38"),
    UInt32("string_count_11"),
    UInt32("locale_table_size_11"),
    UInt32("locale_index_table_offset_11"),
    UInt32("locale_data_index_offset_11"),
    BytesRaw("index_table_hash_11", SIZE=20),
    BytesRaw("string_data_hash_11", SIZE=20),
    UInt32("unknown_39"),
    dependency("rasterizer_globals"),
    dependency("default_camera_effect"),
    dependency("default_wind"),
    dependency("default_damage_effect"),
    dependency("default_collision_damage"),
    string_id_meta("unknown_material"),
    SInt16("unknown_global_material_index"),
    SInt16("unknown_40"),
    dependency("effect_globals"),
    Pad(172),
    TYPE=Struct, ENDIAN=">", SIZE=1536
    )